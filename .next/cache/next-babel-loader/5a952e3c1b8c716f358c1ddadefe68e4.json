{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport shortid from 'shortid';\nimport { withRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../redux/actions';\n// interface NewPost {\n//   title: string | number;\n//   body: string | number;\n//   id: string | number;\n// }\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst NewPost = () => {\n  const classes = useStyles();\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    if (name === 'title') {\n      setTitle(value);\n    }\n\n    if (name === 'body') {\n      setBody(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newPost = {\n      title,\n      body,\n      id: shortid.generate()\n    };\n    dispatch(addPost(newPost));\n    setTitle('');\n    setBody('');\n  };\n\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Create post:\"), __jsx(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"Title\",\n    name: \"title\",\n    variant: \"outlined\",\n    value: title\n  }), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Body\",\n    multiline: true,\n    rows: \"4\",\n    name: \"body\",\n    value: body,\n    onChange: handleChange,\n    variant: \"outlined\"\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button\n  }, \"Add Post\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button\n  }, \"Return to posts\"))));\n};\n\nexport default withRouter(NewPost);","map":null,"metadata":{},"sourceType":"module"}